type User {
  id: ID! @id
  userName: String! @unique
  email: String! @unique
  avatar: String
  firstName: String
  lastName: String
  bio: String
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  post: [Post!]! @relation(name: "PostOfUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentOfUser", onDelete: CASCADE)
  rooms: [Room!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  loginSecret: String
}

type Post {
  id: ID! @id
  user: User @relation(name: "PostOfUser")
  location: String
  files: [File!]! @relation(name: "FileOfPost", onDelete: CASCADE)
  caption: String!
  comments: [Comment!]! @relation(name: "CommentOfPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeOfPost", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like {
  id: ID! @id
  user: User @relation(name: "LikeOfUser")
  post: Post @relation(name: "LikeOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @id
  user: User @relation(name: "CommentOfUser")
  post: Post @relation(name: "CommentOfPost")
  text: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FileOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Room {
  id: ID! @id
  user: [User!]!
  messages: [Message!]!
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room!
}
